version: "3.3"
services:
  db:
    image: 'postgres:latest'
    ports:
      - 8000:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password1!
      POSTGRES_DB: plants
      PGDATA: var/lib/postgresql/data
    volumes:
      - ./persist/db:/var/lib/postgresql/data

  eventstore:
    image: eventstore/eventstore:22.10.0-buster-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_TRUSTED_ROOT_CERTIFICATES_PATH=/certs/ca
      - EVENTSTORE_CERTIFICATE_FILE=/certs/es01/es01.crt
      - EVENTSTORE_CERTIFICATE_PRIVATE_KEY_FILE=/certs/es01/es01.key
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail --insecure https://node1.eventstore:2113/health/live || exit 1"
        ]
      interval: 5s
      timeout: 5s
      retries: 24
    ports:
      - 1111:1113
      - 2113:2113
    volumes:
      - ./persist/es/data:/var/lib/eventstore
      - ./persist/es/eslogs:/var/log/eventstore
      - ./persist/certs:/certs

  mongo:
    image: mongo:4.4.17
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=changeit
    volumes:
      - ./persist/mongo:/data/db

  elasticsearch:
    image: elasticsearch:8.5.3
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=changeit
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - KIBANA_PASSWORD=changeit
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./persist/elastic:/usr/share/elasticsearch/data
      - ./persist/certs:/usr/share/elasticsearch/config/certs
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=changeit
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    volumes:
      - ./persist/certs:/usr/share/kibana/config/certs
      - ./persist/kibana:/usr/share/kibana/data

  back:
    build: back/
    ports:
      - 8001:80
      - 5001:443
    environment:
      DbConnectionTemplate: Host=db;Database=plants;Username={0};Password={1}
      AllowedHosts: "*"
      Auth:AuthKey: "Set this key in secure configuration storage in prod mode"
      Auth:TokenValidityHours: 5000
      ASPNETCORE_URLS: "https://+;http://+"
      ASPNETCORE_HTTPS_PORT: 5001
      ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https

    depends_on:
      - migration
      - eventstore
      - elasticsearch

  front:
    build: front/
    ports:
      - 8002:80
    depends_on:
      - back
